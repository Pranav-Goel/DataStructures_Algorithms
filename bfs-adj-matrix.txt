#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;
int adj[1000][1000];
int visited[1000];
int dist[1000];
void bfs(int i,int n)
    {
    int j,k,l;
    for(l=0;l<n;l++)
        {visited[l]=0;dist[l]=0;}
    queue <int> Q;
    visited[i]=1;Q.push(i);
    
    while(!Q.empty()){
        j=Q.front();
        Q.pop();
        for(k=0;k<n;k++)
            {
            if(adj[j][k])
                {
                if(visited[k]==0)
                {
                dist[k]=1+dist[j];
                visited[k]=1;
                    Q.push(k);
                }
            }
        }
    }
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int t;
    cin>>t;
    while(t--)
        {
        int n;long m;
        cin>>n>>m;
        for(int g=0;g<n;g++)
            {
            for(int h=0;h<n;h++)
                adj[g][h]=0;
        }
        for(long k=0;k<m;k++)
            {
            int x,y;
            cin>>x>>y;
            adj[x-1][y-1]=1;adj[y-1][x-1]=1;
        }
        int source;cin>>source;
        bfs(source-1,n);
        for(int i=0;i<n;i++)
            {
            if(i!=(source-1))
                {
                if(dist[i]==0)
                    printf("-1 ");
                else
                    printf("%d ",6*dist[i]);
            }
        }
        printf("\n");
    }
    return 0;
}
